version: "3.9"
services:

  web-client:
    container_name: web-client
    env_file:
      - .env
    build:
      context: ./web-client
      dockerfile: Dockerfile
      target: dev
    volumes:
      - ./web-build:/build

  redis:
    container_name: redis
    image: redis
    networks:
      - main
    ports:
      - "6379:6379"
      - "8001:8001"

  postgres:
    container_name: postgres
    image: postgres
    env_file:
    - .env
    environment:
      - POSTGRES_DB=${DB_DATABASE}
      - POSTGRES_USER=${DB_USERNAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_HOST_AUTH_METHOD=trust
      - PGDATA=/data/postgres
    volumes: 
      - ./sql/constructor.sql:/docker-entrypoint-initdb.d/constructor.sql
      - db:/var/lib/postgresql/data
    ports:
      - "${DB_PORT}:5432"
    networks:
      - main
    restart: unless-stopped

  api-server:
    env_file:
      - .env
    environment:
      - PORT=8080
      - GAME_HOST=http://game-server/game
    build:
      context: ./api-server
      dockerfile: Dockerfile
    ports:
        - "${LOGIN_PORT}:8080"
    networks:
        - main
    depends_on:
      - redis
      - postgres
      - game-server
    deploy:
      replicas: 1

  game-server:
    env_file:
      - .env
    environment:
      - PORT=5000
      - LOGIN_HOST=http://api-server/api
    build:
      context: ./game-server
      dockerfile: Dockerfile
    ports:
        - "${GAME_PORT}:5000"
    depends_on:
      - redis
      - postgres
    networks:
      - main
    deploy:
      replicas: 1

  nginx:
    container_name: webserver
    image: nginx
    env_file:
      - .env
    restart: unless-stopped
    depends_on:
      - game-server
      - api-server
    ports:
      - 443:443
    networks:
      - main
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./security/:/ssl/
      - ./web-build:/etc/nginx/html
      #- ./public/react/src/assets/:/etc/nginx/html/src/assets/

networks:
  main:
    driver: bridge

volumes:
  db:
    driver: local